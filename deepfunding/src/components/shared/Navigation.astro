---
import Hamburger from "@/components/shared/Hamburger.jsx";
import Button from "@/components/shared/Button";

// Interface for navigation items
interface NavItem {
  href: string;
  text: string;
  isButton?: boolean;
  scrollTo?: boolean;
}

// Navigation items data structure
const navItems: NavItem[] = [
  { href: "/#challenge", text: "CHALLENGE", scrollTo: true },
  { href: "/resources", text: "RESOURCES" },
];

const rightNavItems: NavItem[] = [
  { href: "/faq", text: "FAQ" },
  {
    href: "https://t.me/AgentAllocators/1",
    text: "TELEGRAM",
    isButton: true,
  },
];

// Get the current path to check if we're on the homepage
const currentPath = Astro.url.pathname;
const isHomePage = currentPath === "/" || currentPath === "";
---

<nav class="bg-green py-4 max-width-[940px] width-[940px]">
  <div class="container mx-auto px-4 md:px-0">
    <div class="flex items-center justify-between">
      <!-- Left side navigation (desktop) -->
      <div class="hidden md:block">
        <ul class="flex space-x-6 list-none">
          {
            navItems.map((item) => (
              <li>
                {item.scrollTo && isHomePage ? (
                  <a
                    href={item.href}
                    class="nav-link no-underline scroll-link"
                    data-scroll={item.href.replace(/^\//, "")}
                  >
                    {item.text}
                  </a>
                ) : (
                  <a href={item.href} class="nav-link no-underline">
                    {item.text}
                  </a>
                )}
              </li>
            ))
          }
        </ul>
      </div>

      <!-- Center logo -->
      <a href="/" class="mr-auto ml-0 md:mx-auto">
        <img src="/logo.svg" alt="DeepFunding" class="w-[150px]" />
      </a>

      <!-- Right side navigation (desktop) -->
      <div class="hidden md:flex items-center">
        {
          rightNavItems.map((item, index) => (
            <div class={index === 0 ? "mr-8" : ""}>
              {item.isButton ? (
                <Button href={item.href} client:load>
                  {item.text}
                </Button>
              ) : (
                <a href={item.href} class="nav-link no-underline">
                  {item.text}
                </a>
              )}
            </div>
          ))
        }
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <Hamburger
          id="mobile-menu-button"
          ariaControls="mobile-menu"
          client:load
        />
      </div>
    </div>

    <!-- Mobile menu -->
    <div id="mobile-menu" class="hidden mt-4 md:hidden">
      <ul class="flex flex-col items-center space-y-4 py-4">
        {
          [...navItems, ...rightNavItems].map((item) => (
            <li>
              {item.isButton ? (
                <Button href={item.href} client:load>
                  {item.text}
                </Button>
              ) : item.scrollTo && isHomePage ? (
                <a
                  href={item.href}
                  class="nav-link scroll-link"
                  data-scroll={item.href.replace(/^\//, "")}
                >
                  {item.text}
                </a>
              ) : (
                <a href={item.href} class="nav-link">
                  {item.text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</nav>

<style>
  html {
    scroll-behavior: smooth;
  }

  .nav-link {
    @apply text-sm text-cream py-[5px] px-[10px] hover:text-white font-offside;
  }
</style>

<script>
  // Handle smooth scrolling for navigation links
  document.addEventListener("DOMContentLoaded", () => {
    const scrollLinks = document.querySelectorAll(".scroll-link");

    scrollLinks.forEach((link) => {
      link.addEventListener("click", (e) => {
        e.preventDefault();

        const targetId = link.getAttribute("data-scroll") || "";
        if (targetId) {
          const targetElement = document.querySelector(targetId);

          if (targetElement) {
            targetElement.scrollIntoView({ behavior: "smooth" });
          } else {
            // If element not found on current page, navigate to homepage with anchor
            window.location.href = link.getAttribute("href") || "/";
          }
        }
      });
    });
  });
</script>
